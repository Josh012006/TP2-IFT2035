;; Tester une définition de type algébrique

((abs ((x1 Int)
      (x2 Int))
    (+ x1 x2)) 1 6)                                                  ; ↝ 7

((abs ((x1 (Int -> Int -> Int))
      (x2 Int)
      (x3 Int))
    (x1 x2 x3)) (+) 2 3)                                             ; ↝ 5

(adt ListInt
    ((nil:)
     (cons: Int ListInt))
  (def ((even ((xs ListInt))
         (filter xs (nil: 0) ((cons: x xs) (odd xs))))
        (odd ((xs ListInt))
         (filter xs (nil: 1) ((cons: x xs) (even xs)))))
    (odd (new cons: 2 (new cons: 3 (new nil:))))))                   ; ↝ 1